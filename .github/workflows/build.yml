name: Build
on:
  push:
    branches:
      - "master"
      - "ci/*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: echo rust version
        run: rustc --version
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: |
            C:/Program Files/LLVM
            ./llvm
          key: ${{ runner.os }}-llvm-13
      - name: Cache build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            wiz/target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.toml') }}
      # - name: Install LLVM and Clang
      #   uses: KyleMayes/install-llvm-action@v1
      #   with:
      #     version: "13.0"
      #     directory: ./llvm
      #     cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      # - name: echo llvm prefix
      #   run: echo $env:LLVM_PATH
      #   if: ${{ matrix.os == 'windows-latest' }}
      # - name: list llvm prefix
      #   run: Get-ChildItem $env:LLVM_PATH
      #   if: ${{ matrix.os == 'windows-latest' }}
      # - name: set llvm-sys-prefix
      #   run: echo "LLVM_SYS_130_PREFIX=${env:LLVM_PATH}" >> $env:GITHUB_ENV
      #   if: ${{ matrix.os == 'windows-latest' }}
      # - name: run build
      #   run: cargo build --manifest-path wiz/Cargo.toml --release
      #   env:
      #     RUST_BACKTRACE: 1

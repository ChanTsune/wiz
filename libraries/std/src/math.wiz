namespace fraction

fun abs(_ x: Size): Size {
    if x < 0 {
        return -x
    }
    return x
}

fun gcd(_ m: Size, _ n: Size): Size {
    return _gcd(abs(m), abs(n))
}

fun _gcd(_ m: Size, _ n: Size): Size {
    if n == 0 {
        return m
    }
    return gcd(n, m % n)
}

fun lcm(_ m: Size, _ n: Size): Size {
    val t = gcd(m, n)
    return m / t * n
}

fun pow(_ x: Size, n: USize): Size {
    if n == 0 {
        return 1
    } else if n % 2 == 0 {
        return pow(x * x, n / 2)
    }
    return x * pow(x, n - 1)
}

#[test]
fun test_abs() {
    assert(abs(1) == 1)
    assert(abs(-1) == 1)
}

#[test]
fun test_gcd() {
    assert(gcd(1071, 1029) == 21)
    assert(gcd(1029, 1071) == 21)
}

#[test]
fun test_lcm() {
    assert(lcm(1, 2) == 2)
    assert(lcm(3, 9) == 9)
    assert(lcm(12, 15) == 60)
}

#[test]
fun test_pow() {
    assert(pow(0, 0) == 1)
    assert(pow(1, 1) == 1)
    assert(pow(1, 10) == 1)
    assert(pow(3, 3) == 27)
    assert(pow(-3, 3) == -27)
}

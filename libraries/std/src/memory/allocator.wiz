use libc::stdlib::malloc
use libc::stdlib::calloc
use libc::stdlib::realloc
use libc::stdlib::free

protocol Allocator {
    fun allocate(&self, _ size: USize): *UInt8
    fun reallocate(&self, _ ptr: *UInt8, size: USize): *UInt8
    fun deallocate(&self, _ ptr: *UInt8): Unit
}

struct DefaultAllocator {
    fun new(): Self {
        return Self()
    }
}

extension DefaultAllocator: Allocator {
    fun allocate(&self, _ size: USize): *UInt8 {
        return malloc(size as Size)
    }

    fun reallocate(&self, _ ptr: *UInt8, _ size: USize): *UInt8 {
        return realloc(ptr, size as Size)
    }

    fun deallocate(&self, _ ptr: *UInt8): Unit {
        free(ptr)
    }
}

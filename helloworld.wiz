struct A {
    var a: Int64,
    val b: Int64,
}

struct UInt8Vector {
    var ptr: UnsafePointer<UInt8>,
    var length: UInt64,
    var capacity: UInt64,
}

fun helloWorld(): Unit {
    puts("Hello world!")
}

fun modBy2(_ n: Int64): Int64 {
    return n % 2
}

fun modBy2Expr(_ n: Int64) = n % 2

fun main() {
    var s = A.init(a: 1, b: 0)
    val b = 2
    while s.a < 15 {
        if modBy2(s.a) == 0 {
            helloWorld()
        } else {
            puts("Welcome to Wiz!!")
        }
        s.a = s.a + if modBy2Expr(s.a) == 0 { 1 } else { 3 }
    }
    val c = s.a + b
    puts("...bye")
}
